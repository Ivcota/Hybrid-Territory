datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  String      @id @default(uuid())
  firstName           String?
  lastName            String?
  phone               String?
  email               String      @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  // roles: deactivated, user, admin
  roles               String      @default("deactivated")
  territories         Territory[]
  issues              Issue[]
  Record              Record[]
  DNC                 DNC[]
}

model Territory {
  id             String   @id @default(uuid())
  name           String
  imageURL       String?
  spreadsheetURL String?
  isCompleted    Boolean  @default(false)
  User           User?    @relation(fields: [userId], references: [id])
  userId         String?
  issues         Issue[]
  Record         Record[]
  DNC            DNC[]
}

model DNC {
  id          String    @id @default(uuid())
  createdBy   User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  territory   Territory @relation(fields: [territoryId], references: [id])
  territoryId String
  userId      String
}

model Issue {
  id        String   @id @default(uuid())
  comment   String
  isClosed  Boolean
  createdAt DateTime @default(now())

  user      User      @relation(fields: [userId], references: [id])
  territory Territory @relation(fields: [territoryId], references: [id])

  territoryId String
  userId      String
}

model Record {
  id           String    @id @default(uuid())
  checkoutDate DateTime  @default(now())
  checkinDate  DateTime?

  user      User      @relation(fields: [userId], references: [id])
  territory Territory @relation(fields: [territoryId], references: [id])

  userId      String
  territoryId String
}
